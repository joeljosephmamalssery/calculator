{"version":3,"sources":["Components/calculator.js","App.js","index.js","Components/keypad.js","Components/buttons.js"],"names":["Calculator","className","App","ReactDOM","render","StrictMode","document","getElementById","Keypad","useState","screenValue","setScreenValue","firstNumber","setFirstNumber","secondNumber","setSecondNumber","handleClick","button","num1","num2","operator","index","newArr","i","length","parseInt","result","eval","style","top","buttons","map","onClick","value"],"mappings":"uLAceA,EAXI,WACjB,OACE,8BACE,0BAASC,UAAU,kBAAnB,UACE,4CAEA,cAAC,IAAD,UCCOC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,0jCCLpBC,OAAS,SAATA,SAAgB,IAAD,UACmBC,oDAAS,IAD5B,kNACZC,YADY,cACCC,eADD,yBAEmBF,oDAAS,GAF5B,mNAEZG,YAFY,cAECC,eAFD,yBAGqBJ,oDAAS,GAH9B,mNAGZK,aAHY,cAGEC,gBAHF,cAKbC,YAAc,SAAdA,YAAeC,QACnB,IAAIC,KAAO,EACPC,KAAO,EACPC,SAAW,GACXC,MAAQ,EACZ,GAAe,OAAXJ,OAEF,OADAN,eAAe,IACR,EAET,IAAMW,OAAM,wMAAOZ,aAAP,CAAoBO,SAChC,GAAe,MAAXA,OAAgB,CAClB,IAAK,IAAIM,EAAI,EAAGA,EAAID,OAAOE,OAAS,EAAGD,IAAK,CAC1C,GACgB,MAAdD,OAAOC,IACO,MAAdD,OAAOC,IACO,MAAdD,OAAOC,IACO,MAAdD,OAAOC,GACP,CACAH,SAAWE,OAAOC,GAClBF,MAAQE,EAAI,EACZ,MAEAL,KAAc,GAAPA,KAAYO,SAASH,OAAOC,IAGvC,IAAK,IAAIA,GAAIF,MAAOE,GAAID,OAAOE,OAAS,EAAGD,KACzCJ,KAAc,GAAPA,KAAYM,SAASH,OAAOC,KAGrCV,eAAeK,MACfH,gBAAgBI,MAEhB,IAAMO,OAASC,KAAKT,KAAOE,SAAWD,MAGtC,OADAR,eAAee,QACR,EAETf,eAAeW,SAGjB,OACE,6EACE,kEAAKrB,UAAU,SAAf,SACE,iEAAIA,UAAU,sBAAd,SAAqCS,gBAEvC,kEAAKkB,MAAO,CAAEC,IAAK,SAAnB,SACE,iEAAI5B,UAAU,SAAd,SACG6B,wCAAQC,KAAI,SAACd,EAAQI,GACpB,OACE,qEAAQpB,UAAU,gBAAlB,SACE,iEACEA,UAAU,MACV+B,QAAS,kBAAMhB,YAAYC,IAC3BgB,MAAOhB,EAHT,SAKGA,KANkCI,cAiBtCb,8B,+BCzDAsB,IAlBC,CACd,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,O","file":"static/js/main.d4007b2a.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Keypad from './keypad';\nconst Calculator = () => {\n  return (\n    <div>\n      <article className=\"calculator-body\">\n        <h1>Calculator</h1>\n\n        <Keypad />\n      </article>\n    </div>\n  );\n};\nexport default Calculator;\n","import './App.css';\nimport Calculator from './Components/calculator';\nfunction App() {\n  return (\n    <div>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React, { useState } from 'react';\nimport buttons from './buttons';\nimport '../App.css';\n\nconst Keypad = () => {\n  const [screenValue, setScreenValue] = useState([]);\n  const [firstNumber, setFirstNumber] = useState(0);\n  const [secondNumber, setSecondNumber] = useState(0);\n\n  const handleClick = (button) => {\n    let num1 = 0;\n    let num2 = 0;\n    let operator = '';\n    let index = 0;\n    if (button === 'AC') {\n      setScreenValue([]);\n      return 0;\n    }\n    const newArr = [...screenValue, button];\n    if (button === '=') {\n      for (let i = 0; i < newArr.length - 1; i++) {\n        if (\n          newArr[i] === '+' ||\n          newArr[i] === '-' ||\n          newArr[i] === '*' ||\n          newArr[i] === '/'\n        ) {\n          operator = newArr[i];\n          index = i + 1;\n          break;\n        } else {\n          num1 = num1 * 10 + parseInt(newArr[i]);\n        }\n      }\n      for (let i = index; i < newArr.length - 1; i++) {\n        num2 = num2 * 10 + parseInt(newArr[i]);\n      }\n\n      setFirstNumber(num1);\n      setSecondNumber(num2);\n\n      const result = eval(num1 + operator + num2);\n\n      setScreenValue(result);\n      return 0;\n    }\n    setScreenValue(newArr);\n  };\n\n  return (\n    <div>\n      <div className=\"screen\">\n        <h2 className=\"calculation-preview\">{screenValue}</h2>\n      </div>\n      <div style={{ top: '-30px' }}>\n        <ul className=\"keypad\">\n          {buttons.map((button, index) => {\n            return (\n              <button className=\"btn-container\" key={index}>\n                <li\n                  className=\"btn\"\n                  onClick={() => handleClick(button)}\n                  value={button}\n                >\n                  {button}\n                </li>\n              </button>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Keypad;\n","const buttons = [\n  'AC',\n  '+',\n  '-',\n  '*',\n  '/',\n  '7',\n  '8',\n  '9',\n  '=',\n  '4',\n  '5',\n  '6',\n  '0',\n  '1',\n  '2',\n  '3',\n];\nexport default buttons;\n"],"sourceRoot":""}